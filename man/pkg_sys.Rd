% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg_sys.R
\name{pkg_sys}
\alias{pkg_sys}
\alias{pkg_sys_assets}
\alias{pkg_sys_img}
\alias{pkg_sys_scripts}
\alias{pkg_sys_js}
\alias{pkg_sys_styles}
\alias{pkg_sys_css}
\alias{pkg_sys_scss}
\alias{pkg_sys_fonts}
\alias{pkg_sys_logos}
\alias{pkg_sys_config}
\alias{pkg_sys_extdata}
\alias{pkg_sys_examples}
\alias{pkg_sys_templates}
\title{Package System File}
\usage{
pkg_sys(...)

pkg_sys_assets(..., pkg = "noclocksrtools")

pkg_sys_img(..., pkg = "noclocksrtools")

pkg_sys_scripts(..., pkg = "noclocksrtools")

pkg_sys_js(..., pkg = "noclocksrtools")

pkg_sys_styles(..., pkg = "noclocksrtools")

pkg_sys_css(..., pkg = "noclocksrtools")

pkg_sys_scss(..., pkg = "noclocksrtools")

pkg_sys_fonts(..., pkg = "noclocksrtools")

pkg_sys_logos(..., pkg = "noclocksrtools")

pkg_sys_config(..., pkg = "noclocksrtools")

pkg_sys_extdata(..., pkg = "noclocksrtools")

pkg_sys_examples(..., pkg = "noclocksrtools")

pkg_sys_templates(..., pkg = "noclocksrtools")
}
\description{
This function is used to access system files within the package and wraps
\code{\link[base:system.file]{base::system.file()}} to provide a more convenient interface for accessing
and retrieving installed package system files and resources.
}
\section{Extensions}{


\code{noclocksrtools} also includes a variety of convenience \emph{extension function}
which wrap \code{pkg_sys()} to access specific directories or types of package
resources.
\subsection{External Data}{
\itemize{
\item \code{pkg_sys_extdata()}: Access package data files in the \verb{extdata/} external data folder.
}
}

\subsection{Templates}{
\itemize{
\item \code{pkg_sys_templates()}: Access package templates in the \code{inst/templates} folder.
}
}

\subsection{Scripts}{
\itemize{
\item \code{pkg_sys_scripts()}: Access package scripts in the \code{inst/scripts} folder.
}
}

\subsection{Configuration}{
\itemize{
\item \code{pkg_sys_config()}: Access package configuration files in the \code{inst/config} folder.
}
}

\subsection{Documentation}{
\itemize{
\item \code{pkg_sys_docs()}: Access package documentation files in the \code{inst/docs} folder.
}

There is also the functions \code{\link[=pkg_docs]{pkg_docs()}} and \code{\link[=pkg_manual]{pkg_manual()}} which launch
the package's locally installed documentation website (via \code{pkgdown}) and
its manual PDF, respectively.
}

\subsection{Examples}{
\itemize{
\item \code{pkg_sys_examples()}: Access package example files in the \code{inst/examples} folder.
}
}

\subsection{Assets}{
\itemize{
\item \code{pkg_sys_assets()}: Access package assets included in the \verb{assets/} folder.
}
}
}

\examples{
# pkg_sys examples

# Access the package DESCRIPTION file
pkg_sys("DESCRIPTION")

# Access the package NAMESPACE file
pkg_sys("NAMESPACE")

# Access External Data
pkg_sys("extdata", "data.csv")
# or
pkg_sys_extdata("data.csv")

# Access Assets
pkg_sys("assets", "images", "logo.png")
# or
pkg_sys_assets("images", "logo.png")
# or
pkg_sys_img("logo.png")
}
\seealso{
\itemize{
\item \code{\link[=system_file]{system_file()}}, \code{\link[=pkg_docs]{pkg_docs()}}, \code{\link[=pkg_manual]{pkg_manual()}}
\item \code{\link[base:system.file]{base::system.file()}}, \code{\link[fs:path_package]{fs::path_package()}}
}
}
